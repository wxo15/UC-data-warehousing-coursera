--DROP EXISTING TABLES
DROP TABLE IF EXISTS W_ERROR_LOG;
DROP TABLE IF EXISTS W_JOB_CHANGE_DATA;
DROP TABLE IF EXISTS W_FINANCIAL_SUMMARY_COST_F;
DROP TABLE IF EXISTS W_FINANCIAL_SUMMARY_SALES_F;
DROP TABLE IF EXISTS W_INVOICELINE_F;
DROP TABLE IF EXISTS W_JOB_SHIPMENT_F;
DROP TABLE IF EXISTS W_SUB_JOB_F;
DROP TABLE IF EXISTS W_JOB_F;
DROP TABLE IF EXISTS W_LEAD_F;
DROP TABLE IF EXISTS W_MACHINE_TYPE_D;
DROP TABLE IF EXISTS W_LOCATION_D;
DROP TABLE IF EXISTS W_TIME_D;
DROP TABLE IF EXISTS W_SALES_CLASS_D;
DROP TABLE IF EXISTS W_SALES_AGENT_D;
DROP TABLE IF EXISTS W_CUST_LOCATION_D;
DROP TABLE IF EXISTS W_CUSTOMER_D;

--DROP EXISTING SEQUENCES
DROP SEQUENCE IF EXISTS W_JOB_SEQ;

--CREATE SEQUENCES
CREATE SEQUENCE W_Job_Seq START WITH 1000000 INCREMENT BY 1;

-- create tablesâ€¦
/*********************************
        W_CUSTOMER_D
**********************************/
CREATE TABLE W_CUSTOMER_D
(
	CUST_KEY 			INTEGER NOT NULL, 
	CUST_NAME 			VARCHAR(50) NOT NULL, 
	CITY 				VARCHAR(25) NOT NULL, 
	COUNTRY 			VARCHAR(25) NOT NULL, 
	CREDIT_LIMIT 		DECIMAL(10,2), 
	E_MAIL_ADDRESS 		VARCHAR(50) NOT NULL, 
	CUST_STATE 			VARCHAR(2) NOT NULL, 
	ZIP 				VARCHAR(10) NOT NULL, 
	TERMS_CODE 			VARCHAR(10) NOT NULL,
	CONSTRAINT  W_CUSTOMER_D_PK PRIMARY KEY (CUST_KEY), 
	CHECK (e_mail_address ~ '[a-zA-Z0-9._%-]+@[a-zA-Z0-9._%-]+\.[a-zA-Z]{2,4}')
);
 
 
/*********************************
        W_CUST_LOCATION_D
**********************************/
CREATE TABLE W_CUST_LOCATION_D
(	
	CUST_LOC_KEY		INTEGER NOT NULL, 
	CITY 				VARCHAR(25) NOT NULL, 
	COUNTRY 			VARCHAR(10) NOT NULL, 
	CREDIT_LIMIT 		DECIMAL(10,2) NOT NULL, 
	E_MAIL_ADDRESS 		VARCHAR(50) NOT NULL, 
	CUST_LOCATION_STATE VARCHAR(2) NOT NULL, 
	ZIP 				VARCHAR(10) NOT NULL, 
	CUST_KEY 			INTEGER NOT NULL, 
	CUST_NAME 			VARCHAR(50 ) NOT NULL,
	CONSTRAINT W_CUST_LOCATION_D_PK PRIMARY KEY (CUST_LOC_KEY), 
	CONSTRAINT CUST_KEY_FK FOREIGN KEY (CUST_KEY) REFERENCES W_CUSTOMER_D (CUST_KEY) ON DELETE CASCADE,
    CONSTRAINT CUST_NAME_UNIQUE UNIQUE (CUST_NAME)
);
   
   /*********************************
        W_SALES_AGENT
**********************************/   
CREATE TABLE W_SALES_AGENT_D
(
	SALES_AGENT_ID 		INTEGER NOT NULL, 
	SALES_AGENT_NAME 	VARCHAR(60) NOT NULL, 
	SALES_AGENT_STATE 	VARCHAR(2) NOT NULL, 
	COUNTRY 			VARCHAR(25) NOT NULL,
    CONSTRAINT W_SALES_AGENT_D_PK PRIMARY KEY (SALES_AGENT_ID)
 );

/*********************************
        W_SALES_CLASS_D
**********************************/
CREATE TABLE W_SALES_CLASS_D
(
	SALES_CLASS_ID 		INTEGER NOT NULL, 
	SALES_CLASS_DESC 	VARCHAR(250), 
	BASE_PRICE 			DECIMAL(8,4) NOT NULL,
    CONSTRAINT W_SALES_CLASS_D_PK PRIMARY KEY (SALES_CLASS_ID)
);

  /*********************************
        W_TIME_D
**********************************/   
CREATE TABLE W_TIME_D
(
	TIME_ID			INTEGER NOT NULL, 
	TIME_YEAR		INTEGER NOT NULL, 
	TIME_QUARTER	INTEGER NOT NULL, 
	TIME_MONTH		INTEGER NOT NULL, 
	TIME_DAY		INTEGER NOT NULL, 
	TIME_WEEK		INTEGER NOT NULL,
    CONSTRAINT W_TIME_D_PK PRIMARY KEY (TIME_ID),
    CONSTRAINT W_TIME_D_UNIQUE UNIQUE (TIME_YEAR, TIME_MONTH, TIME_DAY)
);

/*********************************
        W_LOCATION_D
**********************************/  
CREATE TABLE W_LOCATION_D
(
	LOCATION_ID 	INTEGER NOT NULL, 
	LOCATION_NAME 	VARCHAR(50) NOT NULL,
    CONSTRAINT W_LOCATION_D_PK PRIMARY KEY (LOCATION_ID),
    CONSTRAINT W_LOCATION_UNIQUE UNIQUE (LOCATION_NAME)
);

/*********************************
        W_MACHINE_TYPE_D
**********************************/  
CREATE TABLE W_MACHINE_TYPE_D
(
	MACHINE_TYPE_ID		INTEGER NOT NULL, 
	MANUFACTURER		VARCHAR(50) NOT NULL , 
	MACHINE_MODEL		VARCHAR(10) NOT NULL , 
	RATE_PER_HOUR		DECIMAL(7,2) NOT NULL , 
	NUMBER_OF_MACHINES	INTEGER NOT NULL,
    CONSTRAINT W_MACHINE_TYPE_D_PK PRIMARY KEY (MACHINE_TYPE_ID)
);

/*********************************
        W_LEAD_F
**********************************/    
CREATE TABLE W_LEAD_F 
(
	LEAD_ID 		INTEGER NOT NULL, 
	QUOTE_QTY 		INTEGER NOT NULL, 
	QUOTE_PRICE 	DECIMAL(11,2) NOT NULL, 
	LEAD_SUCCESS 	VARCHAR(1) NOT NULL, 
	JOB_ID 			INTEGER, 
	CREATED_DATE 	INTEGER NOT NULL, 
	CUST_ID 		INTEGER NOT NULL, 
	LOCATION_ID 	INTEGER NOT NULL, 
	SALES_AGENT_ID 	INTEGER NOT NULL, 
	SALES_CLASS_ID 	INTEGER NOT NULL, 
	CONSTRAINT W_LEAD_F_PK PRIMARY KEY (LEAD_ID), 
	CONSTRAINT W_LEAD_JOB_ID_UNIQUE UNIQUE (JOB_ID),
	CONSTRAINT W_LEAD_CREATED_DATE_FK FOREIGN KEY (CREATED_DATE) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT W_LEAD_CUST_ID_FK FOREIGN KEY (CUST_ID) REFERENCES W_CUSTOMER_D (CUST_KEY), 
	CONSTRAINT W_LEAD_LOCATION_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT W_LEAD_SALES_AGENT_ID_FK FOREIGN KEY (SALES_AGENT_ID) REFERENCES W_SALES_AGENT_D (SALES_AGENT_ID), 
	CONSTRAINT W_LEAD_SALES_CLASS_ID_FK FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID) 
);

/*********************************
        W_JOB_F
**********************************/    
CREATE TABLE W_JOB_F 
(
	JOB_ID 				INTEGER NOT NULL, 
	CONTRACT_DATE 		INTEGER, 
	SALES_AGENT_ID 		INTEGER NOT NULL, 
	SALES_CLASS_ID 		INTEGER, 
	LOCATION_ID 		INTEGER NOT NULL, 
	CUST_ID_ORDERED_BY 	INTEGER NOT NULL, 
	DATE_PROMISED 		INTEGER, 
	DATE_SHIP_BY 		INTEGER, 
	NUMBER_OF_SUBJOBS 	INTEGER NOT NULL, 
	UNIT_PRICE 			DECIMAL(6,2) NOT NULL, 
	QUANTITY_ORDERED 	INTEGER NOT NULL, 
	QUOTE_QTY 			INTEGER NOT NULL, 
	CONSTRAINT W_JOB_F_PK PRIMARY KEY (JOB_ID), 
	CONSTRAINT W_JOB_CONTRACT_DATE_FK FOREIGN KEY (CONTRACT_DATE) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT W_JOB_SALES_AGENT_ID_FK FOREIGN KEY (SALES_AGENT_ID) REFERENCES W_SALES_AGENT_D (SALES_AGENT_ID) , 
	CONSTRAINT W_JOB_SALES_CLASS_ID_FK FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT W_JOB_LOCATION_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT W_JOB_CUST_ID_ORDERED_BY_FK FOREIGN KEY (CUST_ID_ORDERED_BY) REFERENCES W_CUSTOMER_D (CUST_KEY), 
	CONSTRAINT W_JOB_DATE_PROMISED_FK FOREIGN KEY (DATE_PROMISED) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT W_JOB_DATE_SHIP_BY_FK FOREIGN KEY (DATE_SHIP_BY) REFERENCES W_TIME_D (TIME_ID) 
);

/*********************************
        W_SUB_JOB_F
**********************************/  
CREATE TABLE W_SUB_JOB_F
(
	SUB_JOB_ID 			INTEGER NOT NULL, 
	COST_LABOR 			DECIMAL(8,2) NOT NULL, 
	COST_MATERIAL 		DECIMAL(8,2) NOT NULL, 
	COST_OVERHEAD 		DECIMAL(8,2) NOT NULL, 
	MACHINE_HOURS 		DECIMAL(8,2) NOT NULL, 
	QUANTITY_PRODUCED 	INTEGER NOT NULL, 
	SUB_JOB_AMOUNT 		DECIMAL(11,2) NOT NULL, 
	JOB_ID 				INTEGER NOT NULL, 
	MACHINE_TYPE_ID 	INTEGER NOT NULL, 
	SALES_CLASS_ID 		INTEGER NOT NULL, 
	DATE_PROD_BEGIN 	INTEGER NOT NULL, 
	DATE_PROD_END 		INTEGER NOT NULL, 
	LOCATION_ID 		INTEGER NOT NULL, 
	CUST_ID_ORDERED_BY 	INTEGER NOT NULL, 
	CONSTRAINT W_SUB_JOB_F_PK PRIMARY KEY (SUB_JOB_ID), 
	CONSTRAINT SUBJOB_MACHINE_TYPE_ID FOREIGN KEY (MACHINE_TYPE_ID) REFERENCES W_MACHINE_TYPE_D (MACHINE_TYPE_ID), 
	CONSTRAINT SUBJOB_SALES_CLASS_ID FOREIGN KEY (SALES_CLASS_ID)  REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT SUBJOB_DATE_PROD_BEGIN FOREIGN KEY (DATE_PROD_BEGIN) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT SUBJOB_DATE_PROD_END FOREIGN KEY (DATE_PROD_END) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT SUBJOB_LOCATION_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT SUBJOB_CUST_ID_ORDERED_BY FOREIGN KEY (CUST_ID_ORDERED_BY)  REFERENCES W_CUSTOMER_D (CUST_KEY) 
);

/*********************************
        W_JOB_SHIPMENT_F
**********************************/   
CREATE TABLE W_JOB_SHIPMENT_F
(
	JOB_SHIPMENT_ID 			INTEGER NOT NULL, 
	ACTUAL_QUANTITY 			INTEGER NOT NULL, 
	REQUESTED_QUANTITY 			INTEGER NOT NULL, 
	BOXES 						INTEGER NOT NULL, 
	QUANTITY_PER_BOX 			INTEGER NOT NULL, 
	QUANTITY_PER_PARTIAL_BOX	INTEGER, 
	SHIPPED_AMOUNT 				DECIMAL(8,2) NOT NULL, 
	SUB_JOB_ID 					INTEGER NOT NULL, 
	SALES_CLASS_ID 				INTEGER NOT NULL, 
	LOCATION_ID 				INTEGER NOT NULL, 
	CUST_ID_SHIP_TO 			INTEGER NOT NULL, 
	ACTUAL_SHIP_DATE 			INTEGER NOT NULL, 
	REQUESTED_SHIP_DATE			INTEGER NOT NULL, 
	INVOICE_ID 					INTEGER, 
	CONSTRAINT W_JOB_SHIPMENT_F_PK PRIMARY KEY (JOB_SHIPMENT_ID), 
	CONSTRAINT SHIPMENT_SALES_CLASS_ID_FK FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT SHIPMENT_LOCATION_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT SHIPMENT_CUST_ID_SHIP_TO_FK FOREIGN KEY (CUST_ID_SHIP_TO) REFERENCES W_CUST_LOCATION_D (CUST_LOC_KEY), 
	CONSTRAINT SHIPMENT_ACTUAL_SHIP_DATE_FK FOREIGN KEY (ACTUAL_SHIP_DATE) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT SHIPMENT_REQUESTED_SHIP_DATEFK FOREIGN KEY (REQUESTED_SHIP_DATE) REFERENCES W_TIME_D (TIME_ID) 
);

/*********************************
        W_INVOICELINE_F
**********************************/   
CREATE TABLE W_INVOICELINE_F
(
	INVOICE_ID			INTEGER NOT NULL, 
	INVOICE_QUANTITY 	INTEGER NOT NULL, 
	INVOICE_AMOUNT 		DECIMAL(10,2) NOT NULL, 
	QUANTITY_SHIPPED 	INTEGER NOT NULL, 
	SALES_CLASS_ID 		INTEGER NOT NULL, 
	INVOICE_SENT_DATE	INTEGER NOT NULL, 
	INVOICE_DUE_DATE 	INTEGER NOT NULL, 
	CUST_KEY 			INTEGER NOT NULL, 
	SALES_AGENT_ID 		INTEGER NOT NULL, 
	LOCATION_ID 		INTEGER NOT NULL, 
	CONSTRAINT W_INVOICELINE_F_PK PRIMARY KEY (INVOICE_ID), 
	CONSTRAINT SALES_CLASS_ID_FK2 FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT INVOICE_SENT_DATE_FK FOREIGN KEY (INVOICE_SENT_DATE) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT INVOICE_DUE_DATE_FK FOREIGN KEY (INVOICE_DUE_DATE) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT CUST_KEY_FK2 FOREIGN KEY (CUST_KEY) REFERENCES W_CUSTOMER_D (CUST_KEY), 
	CONSTRAINT SALES_AGENT_ID_FK2 FOREIGN KEY (SALES_AGENT_ID) REFERENCES W_SALES_AGENT_D (SALES_AGENT_ID), 
	CONSTRAINT INV_LOCATION_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID)
);

/*********************************
     FINANCIAL_SUMMARY_SALES_F
**********************************/ 
CREATE TABLE W_FINANCIAL_SUMMARY_SALES_F
(
	FINANCIAL_SUMMARY_SALES_ID	INTEGER NOT NULL, 
	ACTUAL_UNITS 				INTEGER NOT NULL, 
	ACTUAL_AMOUNT 				DECIMAL(18,2) NOT NULL, 
	FORCAST_UNIT 				INTEGER NOT NULL, 
	FORCAST_AMOUNT 				DECIMAL(18,2) NOT NULL, 
	LOCATION_ID 				INTEGER NOT NULL, 
	SALES_CLASS_ID 				INTEGER NOT NULL, 
	REPORT_BEGIN_DATE_ID 		INTEGER NOT NULL, 
	REPORT_END_DATE_ID 			INTEGER NOT NULL, 
	CONSTRAINT W_FINANC_SUM_F_PK PRIMARY KEY (FINANCIAL_SUMMARY_SALES_ID), 
	CONSTRAINT LOCATION_ID_FINANC_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT SALES_CLASS_ID_FINANC_FK FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT REPORT_BEGIN_DATE_ID_FINANC_FK FOREIGN KEY (REPORT_BEGIN_DATE_ID) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT REPORT_END_DATE_ID_FINANC_FK FOREIGN KEY (REPORT_END_DATE_ID) REFERENCES W_TIME_D (TIME_ID)
);

/*********************************
     FINANCIAL_SUMMARY_COST_F
**********************************/ 
CREATE TABLE W_FINANCIAL_SUMMARY_COST_F
(
	FINANCIAL_SUMMARY_COST_ID	BIGINT NOT NULL, 
	ACTUAL_UNITS 				INTEGER NOT NULL, 
	ACTUAL_LABOR_COST 			DECIMAL(12,0) NOT NULL, 
	ACTUAL_MATERIAL_COST 		DECIMAL(18,2) NOT NULL, 
	ACTUAL_MACHINE_COST 		DECIMAL(12,0) NOT NULL, 
	ACTUAL_OVERHEAD_COST 		DECIMAL(18,2) NOT NULL, 
	BUDGET_UNITS 				INTEGER NOT NULL, 
	BUDGET_LABOR_COST 			DECIMAL(12,0) NOT NULL, 
	BUDGET_MATERIAL_COST 		DECIMAL(18,2) NOT NULL, 
	BUDGET_MACHINE_COST 		DECIMAL(12,0) NOT NULL, 
	BUDGET_OVERHEAD_COST 		DECIMAL(18,2) NOT NULL, 
	LOCATION_ID 				INTEGER NOT NULL, 
	MACHINE_TYPE_ID 			INTEGER NOT NULL, 
	SALES_CLASS_ID 				INTEGER NOT NULL, 
	REPORT_BEGIN_DATE_ID 		INTEGER NOT NULL, 
	REPORT_END_DATE_ID 			INTEGER NOT NULL, 
	CONSTRAINT W_FINANC_COST_F_PK PRIMARY KEY (FINANCIAL_SUMMARY_COST_ID), 
	CONSTRAINT LOCATION_ID_COST_FK FOREIGN KEY (LOCATION_ID) REFERENCES W_LOCATION_D (LOCATION_ID), 
	CONSTRAINT SALES_CLASS_ID_COST_FK FOREIGN KEY (SALES_CLASS_ID) REFERENCES W_SALES_CLASS_D (SALES_CLASS_ID), 
	CONSTRAINT REPORT_BEGIN_DATE_ID_COST_FK FOREIGN KEY (REPORT_BEGIN_DATE_ID) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT REPORT_END_DATE_ID_COST_FK FOREIGN KEY (REPORT_END_DATE_ID) REFERENCES W_TIME_D (TIME_ID), 
	CONSTRAINT MACHINE_TYPE_ID_COST_FK FOREIGN KEY (MACHINE_TYPE_ID) REFERENCES W_MACHINE_TYPE_D (MACHINE_TYPE_ID) 
);

